# Docker Compose Minimal - Infrastructure + Core Services Only
# Fast deployment for testing core functionality

services:
  # =============================================================================
  # INFRASTRUCTURE SERVICES
  # =============================================================================
  
  # Redis - Event Pub/Sub and Caching
  redis:
    image: redis:7-alpine
    container_name: factcheck-redis-minimal
    ports:
      - "6379:6379"
    command: >
      redis-server 
      --requirepass antifraud123 
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "antifraud123", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - factcheck-network

  # RabbitMQ - Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: factcheck-rabbitmq-minimal
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: factcheck
      RABBITMQ_DEFAULT_PASS: secure_password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    networks:
      - factcheck-network

  # =============================================================================
  # CORE SERVICES (Fast to build)
  # =============================================================================
  
  # Event Bus Service
  event-bus-service:
    build:
      context: ./services/event-bus-service
      dockerfile: Dockerfile
    container_name: factcheck-event-bus-minimal
    ports:
      - "3009:3009"
      - "9090:9090"  # Metrics port
    environment:
      NODE_ENV: development
      PORT: 3009
      EVENT_BUS_SERVICE_PORT: 3009
      REDIS_URL: redis://:antifraud123@redis:6379
      RABBITMQ_URL: amqp://factcheck:secure_password@rabbitmq:5672
      ENABLE_EVENT_DRIVEN: true
      STANDALONE_MODE: false
      DISABLE_EVENTSTORE: true
      DEBUG: event-bus:*
    volumes:
      - ./services/event-bus-service:/app
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3009/health"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - factcheck-network

  # Auth Service (Fast to build)
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: factcheck-auth-minimal
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      AUTH_SERVICE_PORT: 3001
      EVENT_BUS_SERVICE_URL: http://event-bus-service:3009
      REDIS_URL: redis://:antifraud123@redis:6379
      ENABLE_EVENT_DRIVEN: true
      DEBUG: auth:*
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    depends_on:
      event-bus-service:
        condition: service_healthy
    restart: on-failure:3
    networks:
      - factcheck-network

  # Community Service (Fast to build)
  community-service:
    build:
      context: ./services/community-service
      dockerfile: Dockerfile
    container_name: factcheck-community-minimal
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      COMMUNITY_SERVICE_PORT: 3003
      EVENT_BUS_SERVICE_URL: http://event-bus-service:3009
      REDIS_URL: redis://:antifraud123@redis:6379
      ENABLE_EVENT_DRIVEN: true
      DEBUG: community:*
    volumes:
      - ./services/community-service:/app
      - /app/node_modules
    depends_on:
      event-bus-service:
        condition: service_healthy
    restart: on-failure:3
    networks:
      - factcheck-network

  # API Gateway (Fast to build)
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: factcheck-gateway-minimal
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      PORT: 8080
      API_GATEWAY_PORT: 8080
      EVENT_BUS_SERVICE_URL: http://event-bus-service:3009
      AUTH_SERVICE_URL: http://auth-service:3001
      COMMUNITY_SERVICE_URL: http://community-service:3003
      ENABLE_EVENT_DRIVEN: true
      DEBUG: gateway:*
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    depends_on:
      - auth-service
      - community-service
    restart: on-failure:3
    networks:
      - factcheck-network

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  factcheck-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
